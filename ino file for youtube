#include <IRremote.h>
#include <LiquidCrystal.h>

const int RECV_PIN = 7;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
IRrecv irrecv(RECV_PIN);
decode_results results;
unsigned long key_value = 0;
int LED1 = A0;
int LED2 = A1;
int LED3 = A2;
int LED4 = A3;
int LED5 = A4;
int LED6 = A5;
const int redPin = 10;
const int greenPin = 9;
const int bluePin = 8;
int d1 = 100;
int d2 = 500;
void setup(){
  Serial.begin(9600);
  irrecv.enableIRIn(); 
  irrecv.blink13(true);
  lcd.begin(16, 2);
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  pinMode(LED4, OUTPUT);
  pinMode(LED5, OUTPUT);
  pinMode(LED6, OUTPUT);
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
  setColourRgb(0,0,0);
  
}

void loop(){
  unsigned int rgbColour[3];
 
  if (irrecv.decode(&results)){
 
        if (results.value == 0XFFFFFFFF)
        results.value = key_value;
        lcd.setCursor(0, 0);
        lcd.clear();
        
        switch(results.value){
          case 0xFFA25D:          
          lcd.print("CH-");
          digitalWrite (LED1, LOW);
          digitalWrite (LED2, LOW);
          digitalWrite (LED3, LOW);
          digitalWrite (LED4, LOW);
          digitalWrite (LED5, LOW);
          digitalWrite (LED6, LOW);
         setColourRgb(0,0,0);
          
          break;
          case 0xFF629D:
          lcd.print("CH");
          break;
          case 0xFFE21D:
          lcd.print("CH+");
          break;
          case 0xFF22DD:
          
            lcd.print("|<<");
            lcd.setCursor(0,1);
            lcd.print("Slide left ");
             for (int i = 0; i < 5; i++){
             digitalWrite (LED1, HIGH);
             delay(d1);
             digitalWrite (LED2, HIGH);
             delay(d1);
             digitalWrite (LED3, HIGH);
             delay(d1);
             digitalWrite (LED4, HIGH);
             delay(d1);
             digitalWrite (LED5, HIGH);
             delay(d1);
             digitalWrite (LED6, HIGH);
             delay(d1);
             digitalWrite (LED1, LOW);
             delay(d1);
             digitalWrite (LED2, LOW);
             delay(d1);
             digitalWrite (LED3, LOW);
             delay(d1);
             digitalWrite (LED4, LOW);
             delay(d1);
             digitalWrite (LED5, LOW);
             delay(d1);
             digitalWrite (LED6, LOW);
             delay(d1);
             
            }
          break;
          case 0xFF02FD:
          lcd.print(">>|");
          lcd.setCursor(0,1);
          lcd.print("Slide Right ");
           for (int i = 0; i < 5; i++){
           digitalWrite (LED6, HIGH);
           delay(d1);
           digitalWrite (LED5, HIGH);
           delay(d1);
           digitalWrite (LED4, HIGH);
           delay(d1);
           digitalWrite (LED3, HIGH);
           delay(d1);
           digitalWrite (LED2, HIGH);
           delay(d1);
           digitalWrite (LED1, HIGH);
           delay(d1);
           digitalWrite (LED6, LOW);
           delay(d1);
           digitalWrite (LED5, LOW);
           delay(d1);
           digitalWrite (LED4, LOW);
           delay(d1);
           digitalWrite (LED3, LOW);
           delay(d1);
           digitalWrite (LED2, LOW);
           delay(d1);
           digitalWrite (LED1, LOW);
           delay(d1);
           }
          break ;  
          case 0xFFC23D:
          
          lcd.print(">||");
          lcd.setCursor(0,1);
          lcd.print("RGB Cycle: " );
            for(int i = 0; i<2; i++){
           rgbColour[0] = 0;
           rgbColour[1] = 0;
           rgbColour[2] = 0;  
           // Choose the colours to increment and decrement.
           for (int decColour = 0; decColour < 3; decColour += 1) {
             int incColour = decColour == 2 ? 0 : decColour + 1;
             // cross-fade the two colours.
             for(int i = 0; i < 255; i += 1) {
               rgbColour[decColour] -= 1;
               rgbColour[incColour] += 1;
               setColourRgb(rgbColour[0], rgbColour[1], rgbColour[2]);
               
            
               delay(5);
             }
           }
        }
            
         
          break ;               
          case 0xFFE01F:
          lcd.print("-");
          break ;  
          case 0xFFA857:
          lcd.print("+");
         
          break ;  
          case 0xFF906F:
           lcd.print("EQ Colour");
           lcd.setCursor(0,1);
           lcd.print("Coded");
          
           for (int i = 0; i < 5; i++){
           digitalWrite (LED1, HIGH);
           digitalWrite (LED4, HIGH);
           setColourRgb(255,0,0);
           delay(d2);
           digitalWrite (LED2, HIGH);
           digitalWrite (LED5, HIGH);
           digitalWrite (LED1,LOW);
           digitalWrite (LED4, LOW);
            setColourRgb(0,128,0);
           delay(d2);
           digitalWrite (LED3, HIGH);
           digitalWrite (LED6, HIGH);
           digitalWrite (LED2,LOW);
           digitalWrite (LED5, LOW);
           setColourRgb(0,0,128);
           delay(d2);
           digitalWrite (LED3, LOW);
           digitalWrite (LED6, LOW);
           setColourRgb(0,0,0);
           delay(d2);
           }
          
          break ;  
          case 0xFF6897:
          lcd.print("0");
          break ;  
          case 0xFF9867:
          lcd.print("100+");
          break ;
          case 0xFFB04F:
          lcd.print("200+");
          break ;
          case 0xFF30CF:
          lcd.print("1");
            lcd.setCursor(0,1);
          lcd.print("Scroll left");
           for (int i = 0; i < 3; i++){
           digitalWrite (LED1, HIGH);
           delay(100);
           digitalWrite (LED2, HIGH);
           delay(100);
           digitalWrite (LED1, LOW);
           delay(100);
           digitalWrite (LED3, HIGH);
           delay(100);
           digitalWrite (LED2, LOW);
           delay(100);
           digitalWrite (LED4, HIGH);
           delay(100);
           digitalWrite (LED3, LOW);
           delay(100);
           digitalWrite (LED5, HIGH);
           delay(100);
           digitalWrite (LED4, LOW);
           delay(100);
           digitalWrite (LED6, HIGH);
           delay(100);
           digitalWrite (LED5, LOW);
           delay(100);
           digitalWrite (LED6, LOW);
           delay(100);
           }
          
          break ;
          case 0xFF18E7:
          lcd.print("2");
          
            lcd.setCursor(0,1);
          lcd.print("Scroll Right");
           for (int i = 0; i < 3; i++){
           digitalWrite (LED6, HIGH);
           delay(100);
           digitalWrite (LED5, HIGH);
           delay(100);
           digitalWrite (LED6, LOW);
           delay(100);
           digitalWrite (LED4, HIGH);
           delay(100);
           digitalWrite (LED5, LOW);
           delay(100);
           digitalWrite (LED3, HIGH);
           delay(100);
           digitalWrite (LED4, LOW);
           delay(100);
           digitalWrite (LED2, HIGH);
           delay(100);
           digitalWrite (LED3, LOW);
           delay(100);
           digitalWrite (LED1, HIGH);
           delay(100);
           digitalWrite (LED2, LOW);
           delay(100);
           digitalWrite (LED1, LOW);
           delay(100);
           }
       
          break ;
          case 0xFF7A85:
          lcd.print("3");
          rgbColour[2] = 100;
          setColourRgb(rgbColour[0], rgbColour[1], rgbColour[2]);
         
  
          break ;
          case 0xFF10EF:
          lcd.print("4");

           rgbColour[1] = 100;
          setColourRgb(rgbColour[0], rgbColour[1], rgbColour[2]);
          
          break ;
          case 0xFF38C7:
          lcd.print("5");
            rgbColour[0] = 100;
            setColourRgb(rgbColour[0], rgbColour[1], rgbColour[2]);
             
          break ;
          case 0xFF5AA5:
          lcd.print("6");
         setColourRgb(0,0,128);
          break ;
          case 0xFF42BD:
          lcd.print("7");
           setColourRgb(255,0,0);
          break ;
          case 0xFF4AB5:
          lcd.print("8");
           setColourRgb(0,128,0);
          break ;
          case 0xFF52AD:
          lcd.print("9");
          break ;                   
        }
        key_value = results.value;
        irrecv.resume(); 
  }
  
          }
  

void setColourRgb(unsigned int red, unsigned int green, unsigned int blue) {
 analogWrite(redPin, red);
 analogWrite(greenPin, green);
 analogWrite(bluePin, blue);
}
